---
- hosts: all
  # TODO use variables in the name + checked values?
  tasks:
    # TODO should this be refactored to be host independent? (include or
    # something?)
    # TODO need to use groups['airflow_masters'] here?
    - local_action: assert that="{{ groups['ansible_admins'] | length }} == 1"
      run_once: True
    # TODO maybe factor to airflow stuff below for clarity. problem is that
    # play applied to the single master should not start until this is checked.
    - local_action: assert that="{{ groups['airflow_masters'] | length }} == 1"
      run_once: True
    - assert:
        that: ansible_distribution == 'Ubuntu'
    - assert:
        that: ansible_distribution_version == '16.04'

# TODO replace atlas w/ a var for administration machine(s) and tom w/ var for
# administration user(s)
# TODO make ansible only prompt for password if necessary for this, and
# afterwards default to using pubkeys w/o prompting for password (possible?)
- hosts: all
  name:  Generate/distribute SSH key for Ansible administration.
  vars:
    # up here so it doesn't have to be evaluated for each host. make sense?
    admin_pubkey: "{{ lookup('file', lookup('env', 'HOME') + '/.ssh/id_rsa.pub') }}"
    ansible_admin_host: "{{ groups['ansible_admins'][0] }}"
  tasks:
    - command: systemctl enable ssh
      args:
        creates: /etc/
      become: yes
        
    # neither this nor the service module was working for me...
    #- systemd:
    #    name: ssh
    #    enabled: yes
    #  become: yes
    
    # TODO move to a separate play for localhost? (so it doesn't seem to display
    # as a random external host acting back on this one?)
    # TODO test this key generation on a new machine
    #
    # I'm learning towards keeping key file at ~/.ssh/id_rsa, to avoid having
    # to use flags when calling later.
    #
    # I guess one reason to have a separate key, is to not necessarily have a
    # naive administrator be able to ssh to all, with same permissions as
    # ansible, w/ default ssh flags?
    - local_action: user name=tom generate_ssh_key=yes
      run_once: True
    - authorized_key:
       # TODO make variable
       user: lab
       key: '{{ admin_pubkey }}'
       # TODO get from variable (atlas work? atlas.hong?)
       key_options: 'from="{{ ansible_admin_host }}"'
    # TODO ensure openssh server is latest?
    - template:
        src: templates/sshd_config.j2
        dest: /etc/ssh/sshd_config
        owner: root
        group: root
        mode: '0644'
        # TODO other validate example was in a string. still valid?
        # TODO test validation is working
        validate: /usr/sbin/sshd -t -f %s 
      notify:
        - restart sshd
      become: yes

  handlers:
    - name: restart sshd
      service: name=sshd state=restarted
      become: yes

# TODO problem that group name is also a role name?
- hosts: airflow_masters[0]
  connection: local
  
  roles:
    # TODO need to explicitly specify postgre even though in dependency?
    # TODO need become for postgre? sufficient to let postgre role invoke that?
    - airflow_master

#- hosts: analysis
#  roles:
#    - airflow_worker
